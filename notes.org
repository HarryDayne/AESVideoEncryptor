#+title: Notes
#+description: file containing information pertaining to the video encrypt and decrypt project
#+date: 1/11/2024
#+Author: K Harikaran
---------------------------------------------------------------------------------------

* Encryption Method ( AES 256 ):
** Introduction:
- AES is the state of the art encryption algorithm. It is widely used to encrypt data in enterprise software.
- AES stands for Advanced Encyption Software.
- AES is a block cipher (takes a group of bits as an input ).
** Working:
- It takes in 128 bits(plaintext) and outputs 128 bits (cyphertext)
- The input is made into a 4 byte x 4 byte input array.
- This input array is subject to an initial transformation using the round 0 key ( what do we mean by transformation and how do we get the round 0 key will explained later  )
- after the initial transformation , its made to go through N-1 stages of 4 transformations each and finally the Nth stage with only 3 transformations produces the final cyphertext .
- The value of N depends on the value of M ( Key size ).
- The keys for the transformation ( 0 through N  ) is generated by a Key Expansion Algorithm
- The Round keys are always of 128 bits (16 bytes size) regardless of the input key size (M)
*** Tranformations :
- There are essentially three groups of transformations .
- The Initial Transformation , 1 to N-1 Transformations and the Nth Transformations.
- Each Group of tranformation requires its own 128 bit key made by the Key expansion algorithm
- Hence we require N 128 bit keys , for example if N=10 , we need 11 x 128 = 1408 bits  . This can represented as one large key of size 1408 bits.
- NOTE : Only the add round key transformation requires the round key .
**** Initial Transformation:
- It'll take the the first four words of the expanded key as its round key i.e w(0,3)
- It'll only perform one tranformation
- The tranformation is : Add round key ( Input XOR Round Key )
- It is the same when decrypting except it takes the last four words as its round key.
**** 1 to N-1 Transformations :
- It'll take the corresponding four words of the expanded key as its round key . ex : round 1 will take w(4,7) , round 2 will take w(8,11) and so on.
- It'll perform four transformations
- The Transformations are : Substitute bits --> Shift Rows --> Mix Columns --> Add Round Key
- While Decrypting it does: inverse shift --> inverse sub --> Add Round Key --> Inverse Mix. and the round key will be taken from reverse . ex : round 1 will take w(36,39), round 2 will take w(35,32) and so on.
**** Nth Transformations :
- It'll take the last four words of the expanded key as its round key i.e w(40,43)
- Itll perform three transformations.
- The transformations are : Substitute bits --> Shift Rows --> Add Round Key
- While Decrypting it does : Inverse shift --> Inverse Sub --> Add Round Key . It's round key will be the first four words of the expanded key.
**** Transformation Function :
- In this Section we will explain what does it mean when we say Substitute, Shift and Mix along with their corresponding inverses.
***** Substitute Bytes :
It takes the input matrix looks up it's corresponding value in the look up table called the sbox and replaces the value .
***** Shift Rows:
It takes the input matrix and shifts the rows by an incremental value . For example:
- The 0th row doesnt get shifted at all , and hence retains its original values .
- The First row gets left shifted by one element i.e 0,1,2,3 --> 1,2,3,0
- The Second row gets left shifted by two element i.e 0,1,2,3 --> 2,3,0,1
- The Third row gets left shifter by three elements i.e 0,1,2,3 --> 3,0,1,2
***** Mix Columns
- Its simply multiplying the input matrix to a predefined matrix.
*** Key Expansion Algorithm :
-This concerns the algorithm used to generate the round keys .
* Getting Video Input in Go :
- We can simply read the input file , which we will ask the user to name input.mp4 . the output will be in the binary format.
- we can encrypt this binary value and store it as plaintext in a file named encrypted.txt
* Converting Encrypted Files to Video:
- The Program reads two files , encrypted.txt and key.txt
- The Text in the encrypted text file must be converted back to bytes
-


* Resources :
The following are all the articles and videos referred to , to make this project:
1. Twilio article on encrypting and decrypting Data with AES in Go:https://www.twilio.com/en-us/blog/encrypt-and-decrypt-data-in-go-with-aes-256
2. Neso Academy Playlist on the AES : https://youtube.com/playlist?list=PLBlnK6fEyqRgj06MEnp2VebJ8DgMpF0Zj&si=HidbFoBD-wjoTsoQ
3. Handling files in Go : https://www.youtube.com/watch?v=Mdg3tlGUXrE
